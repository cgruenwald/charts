---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.243.0.0/16
    serviceDomain: cluster.local
    services:
      cidrBlocks:
      - 10.95.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
    kind: KamajiControlPlane
    name: {{ .Release.Name }}-kubevirt
    namespace: {{ .Release.Namespace }}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: KubevirtCluster
    name: {{ .Release.Name }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtCluster
metadata:
  annotations:
    cluster.x-k8s.io/managed-by: kamaji
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  controlPlaneServiceTemplate:
    spec:
      type: LoadBalancer
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
kind: KamajiControlPlane
metadata:
  name: {{ .Release.Name }}-kubevirt
  namespace: {{ .Release.Namespace }}
  labels:
    cluster.x-k8s.io/role: control-plane
  annotations:
    kamaji.clastix.io/kubeconfig-secret-key: "super-admin.svc"
spec:
  dataStoreName: kamaji-etcd
  dataStoreSchema: {{ .Release.Namespace }}
  addons:
    coreDNS:
      dnsServiceIPs:
      - 10.95.0.10
    konnectivity:
      server:
        port: 8132
#    kubeProxy: { }
  kubelet:
    cgroupfs: systemd
    preferredAddressTypes:
#    - Hostname
    - InternalIP
    - ExternalIP
  network:
    serviceType: LoadBalancer
  deployment: {}
  replicas: 2
  version: {{ .Chart.AppVersion }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtMachineTemplate
metadata:
  name: {{ .Release.Name }}-md-0
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      virtualMachineBootstrapCheck:
        checkStrategy: ssh
      virtualMachineTemplate:
        metadata:
          namespace: {{ .Release.Namespace }}
#          annotations:
#            kubevirt.io/allow-pod-bridge-network-live-migration: "true"
        spec:
          runStrategy: Always
          template:
            spec:
#              dnsPolicy: ClusterFirstWithHostNet
#              dnsConfig:
#                nameservers:
#                - 192.168.1.1
#                - 1.1.1.1
#                searches:
#                - default.svc.cluster.local
#                - svc.cluster.local
#                - cluster.local
              domain:
                cpu:
#                  treads: 1
                  cores: 2
                  sockets: 1
                devices:
                  disks:
                  - disk:
                      bus: virtio
                    name: containervolume
                  - name: ephemeral
                    disk:
                      bus: virtio
                  interfaces:
                  - name: default
                    bridge: {}
#                    masquerade: {}
#                  networkInterfaceMultiqueue: true
                memory:
                  guest: 4Gi
              evictionStrategy: External
              volumes:
              - containerDisk:
                  image: ghcr.io/cgruenwald/goatystack/ubuntu-container-disk:latest
                name: containervolume
              - name: ephemeral
                emptyDisk:
                  capacity: 20Gi
              networks:
              - name: default
                pod: {}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: {{ .Release.Name }}-md-0
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      diskSetup:
        filesystems:
        - device: /dev/vdb
          filesystem: xfs
          label: ephemeral
          partition: "none"
      mounts:
      - ["LABEL=ephemeral", "/ephemeral"]
      - ["/ephemeral/kubelet", "/var/lib/kubelet", "none", "bind,nofail"]
#      - ["/ephemeral/containerd", "/var/lib/containerd", "none", "bind,nofail"]
      preKubeadmCommands:
      - sed -i 's|root:x:|root::|' /etc/passwd
      - systemctl stop containerd.service
      - mkdir -p /ephemeral/kubelet /ephemeral/containerd
      - mount -o bind /ephemeral/kubelet /var/lib/kubelet
#      - mount -o bind /ephemeral/containerd /var/lib/containerd
      - systemctl start containerd.service
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs: {}
        discovery:
          bootstrapToken:
            apiServerEndpoint: "{{ .Release.Name }}-kubevirt.{{ .Release.Namespace }}.svc:6443"
      initConfiguration:
        skipPhases:
        - addon/kube-proxy
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{ .Release.Name }}-md-0
  namespace: {{ .Release.Namespace }}
spec:
  clusterName: {{ .Release.Name }}
  replicas: 3
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: {{ .Release.Name }}-md-0
          namespace: {{ .Release.Namespace }}
      clusterName: {{ .Release.Name }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: KubevirtMachineTemplate
        name: {{ .Release.Name }}-md-0
        namespace: {{ .Release.Namespace }}
      version: v{{ .Chart.AppVersion }}
